openapi: 3.0.1
info:
  title: E-commerce API
  description: API documentation for E-commerce project
  version: 1.0.0
paths:
  /api/products:
    get:
      tags:
        - products
      summary: Get all products
      description: Retrieve all products
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit the number of products returned
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: sort
          schema:
            type: string
          description: Sort order
        - in: query
          name: query
          schema:
            type: string
          description: Query to filter products
      responses:
        200:
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        500:
          description: Error in attempting to retrieve products
    post:
      tags:
        - products
      summary: Add a new product
      description: Add a new product to the store
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Product added successfully
        500:
          description: Error in attempting to add the product
  /api/products/{pid}:
    get:
      tags:
        - products
      summary: Get product by ID
      description: Retrieve a single product by ID
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        200:
          description: Product details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        500:
          description: Error in attempting to retrieve the product
    put:
      tags:
        - products
      summary: Update product by ID
      description: Update a single product by ID
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Product updated successfully
        500:
          description: Error in attempting to update the product
    delete:
      tags:
        - products
      summary: Delete product by ID
      description: Delete a single product by ID
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        200:
          description: Product deleted successfully
        500:
          description: Error in attempting to delete the product

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: Product ID
        name:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        price:
          type: number
          description: Product price
        stock:
          type: integer
          description: Product stock
        owner:
          type: string
          description: Product owner
# openapi: 3.0.1
# info:
#   title: E-commerce API
#   description: API documentation for E-commerce project
#   version: 1.0.0
# paths:
#   /api/products:
#     get:
#       summary: Get all products
#       description: Retrieve a list of products
#       parameters:
#         - in: query
#           name: limit
#           schema:
#             type: integer
#             default: 10
#           description: Maximum number of products to return
#         - in: query
#           name: page
#           schema:
#             type: integer
#             default: 1
#           description: Page number
#         - in: query
#           name: sort
#           schema:
#             type: string
#             description: Sort order
#         - in: query
#           name: query
#           schema:
#             type: string
#             description: Search query
#       responses:
#         200:
#           description: A list of products
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: "#/components/schemas/Product"
#         500:
#           description: Error in attempting to retrieve products
#     post:
#       summary: Add a new product
#       description: Create a new product
#       requestBody:
#         content:
#           application/json:
#             schema:
#               $ref: "#/components/schemas/Product"
#       responses:
#         200:
#           description: Product added successfully
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Product"
#         500:
#           description: Error in attempting to add the product
#   /api/products/{pid}:
#     get:
#       summary: Get product by ID
#       description: Retrieve a product by its ID
#       parameters:
#         - in: path
#           name: pid
#           required: true
#           schema:
#             type: string
#           description: Product ID
#       responses:
#         200:
#           description: A single product
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Product"
#         500:
#           description: Error in attempting to retrieve the product
#     put:
#       summary: Update product
#       description: Update a product by its ID
#       parameters:
#         - in: path
#           name: pid
#           required: true
#           schema:
#             type: string
#           description: Product ID
#       requestBody:
#         content:
#           application/json:
#             schema:
#               $ref: "#/components/schemas/Product"
#       responses:
#         200:
#           description: Updated product
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Product"
#         500:
#           description: Error in attempting to update the product
#     delete:
#       summary: Delete product
#       description: Delete a product by its ID
#       parameters:
#         - in: path
#           name: pid
#           required: true
#           schema:
#             type: string
#           description: Product ID
#       responses:
#         200:
#           description: Product deleted successfully
#         404:
#           description: Product not found
#         500:
#           description: Error in attempting to delete the product
#   /api/products/mocks:
#     get:
#       summary: Get mock products
#       description: Retrieve a list of mock products
#       responses:
#         200:
#           description: A list of mock products
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: "#/components/schemas/Product"
#         500:
#           description: Error in attempting to retrieve mock products

# components:
#   schemas:
#     Product:
#       type: object
#       properties:
#         id:
#           type: string
#           description: Product ID
#         name:
#           type: string
#           description: Product name
#         description:
#           type: string
#           description: Product description
#         price:
#           type: number
#           description: Product price
#         stock:
#           type: integer
#           description: Product stock
#         owner:
#           type: string
#           description: Product owner
